diff --git a/.gitignore b/.gitignore
index 1899660..2c31dab 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,3 @@
 build
-.vscode
\ No newline at end of file
+.vscode
+temp
\ No newline at end of file
diff --git a/main.cpp b/main.cpp
index dd0d336..04679a0 100644
--- a/main.cpp
+++ b/main.cpp
@@ -6,7 +6,7 @@
 class TileMap : public sf::Drawable , sf::Transformable
 {
     public:
-        bool load_tilemap(const std::string tileset, sf::Vector2u tileSize, int* tiles, int height, int width)
+        bool load_tilemap(const std::string tileset, sf::Vector2u tileSize, char* tiles, int height, int width)
         {
             /*
                 height ==> rows
@@ -31,7 +31,7 @@ class TileMap : public sf::Drawable , sf::Transformable
             for(int i = 0; i < width; i++)
                 for(int j = 0; j < height; j++)
                 {
-                    int tileNumber = tiles[i + j*width];
+                    int tileNumber = atoi(&tiles[i + j*width]);
                     // std::cout << "TileNumber is " << tileNumber << std::endl;
 
                     int tx = tileNumber % (textures.getSize().x / tileSize.x);
@@ -175,18 +175,18 @@ T renderObject(const float objectShape, const sf::Vector2f &objectPosition, sf::
     return object;
 }
 
-int* invertGameArray(int arr[20*20], int* height, int* width)
+char* invertGameArray(char arr[20*20], int height, int width)
 {
-    static int arr1[20*20];
-    for(int i =0; i < *width; i++)
-        for(int j = 0; j < *height; j++)
-            arr1[j + i * (*height)] = arr[i + j * (*width)];
+    char arr1[20*20];
+    for(int i =0; i < width; i++)
+        for(int j = 0; j < height; j++)
+            arr1[j + i * (height)] = arr[i + j * (width)];
     
     return arr1;
 }
 
 
-bool doesCollide(sf::RectangleShape* rectshape,sf::CircleShape* circshape, sf::Vector2u* tileSize, sf::Vector2u* mapSize, int* tiles)
+bool doesCollide(sf::RectangleShape* rectshape,sf::CircleShape* circshape, sf::Vector2u* tileSize, sf::Vector2u* mapSize, char* tiles)
 {
     sf::Vector2f shapePosition = circshape->getPosition();
 
@@ -231,29 +231,8 @@ int main()
     sf::RenderWindow window(sf::VideoMode(frame_width, frame_height), "collision_detection.maybe", sf::Style::Default, settings);
     TileMap map;
 
-    int tiles[] = {
-        1, 1 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        1, 1 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        1, 0 ,0, 0, 0, 1, 3, 3, 3, 3, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        1, 1 ,1, 1, 1, 1, 0, 3, 3, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 1 ,0, 0, 0, 1, 0, 3, 3, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 3, 3, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 2, 2, 0, 0, 3, 3, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 3, 3, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,2, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 
-        0, 0 ,0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ,0, 0, 0, 0, 0, 0, 0, 5, 
-    };
-    int* invertedTiles = invertGameArray(tiles, &height, &width);
+    char tiles[] = "1100000000000000000011000000000000000000100001333300000000001111110330000000000001000103300000000000000000033000000000000002200330000000000000000003300000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005";
+    char* invertedTiles = invertGameArray(tiles, height, width);
 
     sf::Vector2u tileSize = sf::Vector2u(64,64);
     sf::Vector2u mapSize = sf::Vector2u(width, height);
